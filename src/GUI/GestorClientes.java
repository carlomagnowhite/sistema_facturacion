/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import java.sql.*;
/**
 *
 * @author Matt
 */
public class GestorClientes extends javax.swing.JFrame {
    //atributos
    Redimensionador r = new Redimensionador();
    private MainFrame mf;
    Conexion con = new Conexion();
    String cliente [] = new String[7];
    
    /**
     * Creates new form GestorClientes
     */
    public GestorClientes() {
        initComponents();
        jPanel1.setLayout(null);
        jtxtNacimiento.setText("dd/MM/yyyy");
        jtxtBuscarCedula.setText("BUSCAR");
        jButtonBack.requestFocus();
        r.resizeImageIcon(jButtonBack, "src/imgs/back.png");
        r.resizeImageIcon(jButtonDone, "src/imgs/add-user.png");
        r.resizeImageIcon(jButtonEdit, "src/imgs/edit-info.png");
        r.resizeImageIcon(jButtonDelete, "src/imgs/delete.png");
        r.resizeImageIcon(jButtonBuscar, "src/imgs/search.png");
        r.resizeImageIcon(jButtonLimpiar, "src/imgs/clean.png");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelDatos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtxtCedula = new javax.swing.JTextField();
        jtxtNombre = new javax.swing.JTextField();
        jtxtApellido = new javax.swing.JTextField();
        jtxtDireccion = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jtxtNacimiento = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jtxtTelefono = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        jtxtMail = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();
        jtxtBuscarCedula = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jPanelBotones = new javax.swing.JPanel();
        jButtonBack = new javax.swing.JButton();
        jButtonDone = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanelDatos.setBackground(new java.awt.Color(102, 102, 102));
        jPanelDatos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CÉDULA");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("NOMBRE");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("eMAIL");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("FEC. NACIMIE.");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("DIRECCION");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("TELÉFONO");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("APELLIDO");

        jtxtCedula.setBackground(new java.awt.Color(102, 102, 102));
        jtxtCedula.setFont(new java.awt.Font("Roboto Medium", 1, 12)); // NOI18N
        jtxtCedula.setForeground(new java.awt.Color(255, 255, 255));
        jtxtCedula.setBorder(null);
        jtxtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtCedulaKeyTyped(evt);
            }
        });

        jtxtNombre.setBackground(new java.awt.Color(102, 102, 102));
        jtxtNombre.setFont(new java.awt.Font("Roboto Medium", 1, 12)); // NOI18N
        jtxtNombre.setForeground(new java.awt.Color(255, 255, 255));
        jtxtNombre.setBorder(null);
        jtxtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtNombreActionPerformed(evt);
            }
        });

        jtxtApellido.setBackground(new java.awt.Color(102, 102, 102));
        jtxtApellido.setFont(new java.awt.Font("Roboto Medium", 1, 12)); // NOI18N
        jtxtApellido.setForeground(new java.awt.Color(255, 255, 255));
        jtxtApellido.setBorder(null);

        jtxtDireccion.setBackground(new java.awt.Color(102, 102, 102));
        jtxtDireccion.setFont(new java.awt.Font("Roboto Medium", 1, 12)); // NOI18N
        jtxtDireccion.setForeground(new java.awt.Color(255, 255, 255));
        jtxtDireccion.setBorder(null);

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator3.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator4.setBackground(new java.awt.Color(255, 255, 255));

        jtxtNacimiento.setBackground(new java.awt.Color(102, 102, 102));
        jtxtNacimiento.setFont(new java.awt.Font("Roboto Medium", 1, 12)); // NOI18N
        jtxtNacimiento.setForeground(new java.awt.Color(255, 255, 255));
        jtxtNacimiento.setBorder(null);
        jtxtNacimiento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtNacimientoFocusGained(evt);
            }
        });
        jtxtNacimiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtNacimientoKeyTyped(evt);
            }
        });

        jSeparator6.setBackground(new java.awt.Color(255, 255, 255));

        jtxtTelefono.setBackground(new java.awt.Color(102, 102, 102));
        jtxtTelefono.setFont(new java.awt.Font("Roboto Medium", 1, 12)); // NOI18N
        jtxtTelefono.setForeground(new java.awt.Color(255, 255, 255));
        jtxtTelefono.setBorder(null);
        jtxtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtTelefonoKeyTyped(evt);
            }
        });

        jSeparator7.setBackground(new java.awt.Color(255, 255, 255));

        jtxtMail.setBackground(new java.awt.Color(102, 102, 102));
        jtxtMail.setFont(new java.awt.Font("Roboto Medium", 1, 12)); // NOI18N
        jtxtMail.setForeground(new java.awt.Color(255, 255, 255));
        jtxtMail.setBorder(null);

        jSeparator8.setBackground(new java.awt.Color(255, 255, 255));

        jtxtBuscarCedula.setBackground(new java.awt.Color(102, 102, 102));
        jtxtBuscarCedula.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        jtxtBuscarCedula.setForeground(new java.awt.Color(255, 255, 255));
        jtxtBuscarCedula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtBuscarCedulaFocusGained(evt);
            }
        });
        jtxtBuscarCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtBuscarCedulaKeyTyped(evt);
            }
        });

        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDatosLayout = new javax.swing.GroupLayout(jPanelDatos);
        jPanelDatos.setLayout(jPanelDatosLayout);
        jPanelDatosLayout.setHorizontalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jtxtBuscarCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 129, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosLayout.createSequentialGroup()
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4)
                    .addComponent(jtxtDireccion)
                    .addComponent(jtxtNombre)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator3)
                    .addComponent(jtxtApellido)
                    .addComponent(jSeparator1)
                    .addComponent(jtxtCedula))
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator8)
                            .addComponent(jtxtMail)))
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator6)
                            .addComponent(jtxtNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)))
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator7)
                            .addComponent(jtxtTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))))
                .addGap(18, 18, 18))
        );
        jPanelDatosLayout.setVerticalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtBuscarCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jtxtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addGap(14, 14, 14)))
                        .addGap(16, 16, 16)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelDatosLayout.createSequentialGroup()
                                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jtxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21))
                            .addGroup(jPanelDatosLayout.createSequentialGroup()
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)))
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jtxtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jtxtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanelBotones.setBackground(new java.awt.Color(102, 102, 102));
        jPanelBotones.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelBotones.setForeground(new java.awt.Color(204, 153, 255));

        jButtonBack.setBackground(new java.awt.Color(0, 0, 0));
        jButtonBack.setForeground(new java.awt.Color(0, 0, 0));
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jButtonDone.setBackground(new java.awt.Color(255, 255, 255));
        jButtonDone.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDoneActionPerformed(evt);
            }
        });

        jButtonEdit.setBackground(new java.awt.Color(255, 255, 255));
        jButtonEdit.setForeground(new java.awt.Color(255, 255, 255));
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonDelete.setBackground(new java.awt.Color(255, 255, 255));
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBotonesLayout = new javax.swing.GroupLayout(jPanelBotones);
        jPanelBotones.setLayout(jPanelBotonesLayout);
        jPanelBotonesLayout.setHorizontalGroup(
            jPanelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBotonesLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonDone, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(jButtonEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17))
        );
        jPanelBotonesLayout.setVerticalGroup(
            jPanelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotonesLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonDone, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jPanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(jPanelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jPanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:
        onClose();
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jtxtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtNombreActionPerformed

    private void jButtonDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDoneActionPerformed
        // TODO add your handling code here:
        crearCliente();
    }//GEN-LAST:event_jButtonDoneActionPerformed

    private void jtxtCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCedulaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
        if (jtxtCedula.getText().trim().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_jtxtCedulaKeyTyped

    private void jtxtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtTelefonoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
        if (jtxtTelefono.getText().trim().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_jtxtTelefonoKeyTyped

    private void jtxtNacimientoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNacimientoKeyTyped
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if ((c < '0' || c > '9') && c != '/') {
            evt.consume();
        }
        if (jtxtNacimiento.getText().trim().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_jtxtNacimientoKeyTyped

    private void jtxtNacimientoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtNacimientoFocusGained
        // TODO add your handling code here:
        jtxtNacimiento.setText("");
    }//GEN-LAST:event_jtxtNacimientoFocusGained

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        // TODO add your handling code here:
        enviarModificaciones();
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jtxtBuscarCedulaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtBuscarCedulaFocusGained
        // TODO add your handling code here:
        jtxtBuscarCedula.setText("");
    }//GEN-LAST:event_jtxtBuscarCedulaFocusGained

    private void jtxtBuscarCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtBuscarCedulaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
        if (jtxtBuscarCedula.getText().trim().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_jtxtBuscarCedulaKeyTyped

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        editarCliente();
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        eliminarCliente();
    }//GEN-LAST:event_jButtonDeleteActionPerformed
    // metodo para comprobar la existencia de un cliente en la BD por cedula START
    public boolean existCustomer(String cedula) {
        try {
            Connection c = con.ConexionBD();
            String sql = "SELECT COUNT(*) FROM clientes WHERE CED_CLI = ?;";
            PreparedStatement ps = c.prepareStatement(sql);
            ps.setString(1, cedula);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                int count = rs.getInt(1);
                if (count > 0) {
                    return true;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR: " + e, "RUNTIME EXCEPTION", JOptionPane.ERROR_MESSAGE);
        }

        return false;
    }
    // metodo para comprobar la existencia de un cliente en la BD por cedula END
    
    //metodo para crear un cliente START
    public void crearCliente() {
        try {
            String cedula = jtxtCedula.getText().trim(), nombre = jtxtNombre.getText().trim(), apellido = jtxtApellido.getText().trim(),
                    direccion = jtxtDireccion.getText().trim(), nacimiento = jtxtNacimiento.getText().trim(), telefono = jtxtTelefono.getText().trim(), correo = jtxtMail.getText().trim();
            if (cedula.isEmpty() || nombre.isEmpty() || apellido.isEmpty() || direccion.isEmpty() || nacimiento.isEmpty() || telefono.isEmpty() || correo.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Rellene todos los campos solicitados", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            } else {
                if (validarCedula(jtxtCedula.getText().trim())) {
                    if (existCustomer(jtxtCedula.getText().trim())) {
                        JOptionPane.showMessageDialog(this, "El cliente ya existe", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        if (validarCorreo(correo) && validarTelefono(telefono)) {
                            String sql = "INSERT INTO clientes VALUES (?,?,?,?,?,?,?);";
                            Connection c = con.ConexionBD();
                            PreparedStatement ps = c.prepareStatement(sql);
                            ps.setString(1, cedula);
                            ps.setString(2, nombre);
                            ps.setString(3, apellido);
                            ps.setString(4, direccion);
                            ps.setString(5, nacimiento);
                            ps.setString(6, telefono);
                            ps.setString(7, correo);
                            if (ps.executeUpdate() > 0) {
                                JOptionPane.showMessageDialog(this, "Cliente creado con éxito", "Inserción realizada", JOptionPane.PLAIN_MESSAGE);
                                limpiarCampos();
                            } else {
                                JOptionPane.showMessageDialog(this, "Error al intentar crear el cliente", "Inserción:ERROR", JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Revise que todos los campos sean válidos", "Info Errónea", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Cédula NO válida", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e, "RUNTIME EXCEPTION", JOptionPane.ERROR_MESSAGE);
        }

    }
    //metodo para crear un cliente END
    
    //método para editar cliente START
    public void editarCliente() {
        try {
            if (jtxtBuscarCedula.getText().trim().isEmpty() || jtxtBuscarCedula.getText().trim().equals("BUSCAR") || jtxtBuscarCedula.getText().trim().length() < 10) {
                JOptionPane.showMessageDialog(this, "Para editar un cliente, ingrese la cédula", "Ingresar cédula", JOptionPane.WARNING_MESSAGE);
            } else {
                if (validarCedula(jtxtBuscarCedula.getText().trim())) {
                    if (existCustomer(jtxtBuscarCedula.getText().trim())) {
                        Connection c = con.ConexionBD();
                        String sql = "SELECT * FROM clientes WHERE CED_CLI = '"+jtxtBuscarCedula.getText().trim()+"';";
                        Statement s = c.createStatement();
                        ResultSet rs = s.executeQuery(sql);
                        
                        
                        while (rs.next()) {
                            cliente [0] = rs.getString("CED_CLI");
                            cliente [1] = rs.getString("NOM_CLI");
                            cliente [2] = rs.getString("APE_CLI");
                            cliente [3] = rs.getString("DIR_CLI");
                            cliente [4] = rs.getString("FEC_NAC_CLI");
                            cliente [5] = rs.getString("TEL_CLI");
                            cliente [6] = rs.getString("COR_CLI");
                        }
                        
                        jtxtCedula.setText(cliente[0]);
                        jtxtNombre.setText(cliente[1]);
                        jtxtApellido.setText(cliente[2]);
                        jtxtDireccion.setText(cliente[3]);
                        jtxtNacimiento.setText(cliente[4]);
                        jtxtTelefono.setText(cliente[5]);
                        jtxtMail.setText(cliente[6]);
                        jtxtCedula.setEnabled(false);
                        jtxtNacimiento.setEnabled(false);
                        
                    }else{
                        JOptionPane.showMessageDialog(this, "Cliente no existente");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Cédula NO válida", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }
        } catch (Exception e) {
        }

    }

    //método para editar cliente END
    
    //método para enviar modificaciones de cliente START
    public void enviarModificaciones() {
        try {
            String nombre = jtxtNombre.getText().trim(), apellido = jtxtApellido.getText().trim(),
                    direccion = jtxtDireccion.getText().trim(), telefono = jtxtTelefono.getText().trim(), correo = jtxtMail.getText().trim();
            if (nombre.isEmpty() || apellido.isEmpty() || direccion.isEmpty() || telefono.isEmpty() || correo.isEmpty() || cliente[0] == null) {
                JOptionPane.showMessageDialog(this, "Para modificar un cliente ingrese una cédula", "Cédula faltante", JOptionPane.ERROR_MESSAGE);
            } else {
                if (nombre.equals(cliente[1]) && apellido.equals(cliente[2]) && direccion.equals(cliente[3]) && telefono.equals(cliente[5]) && correo.equals(cliente[6])) {
                    JOptionPane.showMessageDialog(this, "Revise que la información a modificar sea diferente a la actual.");
                } else {
                    if (validarCorreo(correo) && validarTelefono(telefono)) {
                        String sql = "UPDATE clientes SET NOM_CLI = ?, APE_CLI = ?, DIR_CLI = ?, TEL_CLI = ?, COR_CLI = ? WHERE CED_CLI = '" + jtxtCedula.getText().trim() + "';";
                        Connection c = con.ConexionBD();
                        PreparedStatement ps = c.prepareStatement(sql);
                        ps.setString(1, nombre);
                        ps.setString(2, apellido);
                        ps.setString(3, direccion);
                        ps.setString(4, telefono);
                        ps.setString(5, correo);

                        if (ps.executeUpdate() > 0) {
                            JOptionPane.showMessageDialog(this, "Datos de cliente modificados correctamente", "Modificación realizada", JOptionPane.PLAIN_MESSAGE);
                            limpiarCampos();
                        } else {
                            JOptionPane.showMessageDialog(this, "Ningún registro afectado", "WRONG", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "Revise que la informacióna modificar sea válida (correo o teléfono)","Verificar Información",JOptionPane.WARNING_MESSAGE);
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR: " +e, "RUNTIME EXCEPTION", JOptionPane.ERROR_MESSAGE);
        }

    }
 
    //método para enviar modificaciones de cliente END
    
    //método para eliminar clientes START
        public void eliminarCliente() {
        try {
            limpiarCampos();
            String cliente = JOptionPane.showInputDialog("Ingrese la cédula del cliente a eliminar");
            if (validarCedula(cliente)) {
                if (existCustomer(cliente)) {
                    Connection c = con.ConexionBD();
                    String sql = "DELETE FROM clientes WHERE CED_CLI = '"+cliente+"';";
                    PreparedStatement ps = c.prepareStatement(sql);
                    if (JOptionPane.showConfirmDialog(this, "Está seguro que desea eliminar el cliente con la cédula: " +cliente,"Confirmar",JOptionPane.YES_NO_OPTION) == 0) {
                        JOptionPane.showMessageDialog(this, ps.executeUpdate() > 0 ? "Cliente borrado exitosamente" : "Error al borrar el cliente","Result",JOptionPane.PLAIN_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Cliente no existente","Verificar cédula",JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Cédula NO válida", "ERROR CÉDULA", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR: " + e, "RUNTIME EXCEPTION", JOptionPane.ERROR_MESSAGE);
        }

    }
    
    //método para eliminar clientes END
    
    public void setParentFrame(MainFrame mf){
        this.mf = mf;
    }
    public void onClose(){
        mf.setEnabled(true);
        mf.requestFocus();
        dispose();
    }
    
    public boolean validarCedula(String cedula){
        String regex = "^(0[1-9]|1[0-9]|2[0-4])[0-9]{8}$";
        return Pattern.matches(regex, cedula);
    }
    
    public boolean validarCorreo(String correo){
        String regex = "^[A-Za-z0-9._%+-]+@(gmail\\.com|hotmail\\.com|uta\\.edu\\.ec|outlook\\.com)$";
        return Pattern.matches(regex, correo);
    }
    
    public boolean validarTelefono(String telefono){
        String regex = "^09[0-9]{8}$";
        return Pattern.matches(regex, telefono);
    }
    
    public void limpiarCampos(){
        jtxtCedula.setText("");
        jtxtNombre.setText("");
        jtxtApellido.setText("");
        jtxtDireccion.setText("");
        jtxtNacimiento.setText("");
        jtxtTelefono.setText("");
        jtxtMail.setText("");
        jtxtBuscarCedula.setText("");
        jtxtCedula.setEnabled(true);
        jtxtNacimiento.setEnabled(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestorClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestorClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestorClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestorClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestorClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonDone;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelBotones;
    private javax.swing.JPanel jPanelDatos;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTextField jtxtApellido;
    private javax.swing.JTextField jtxtBuscarCedula;
    private javax.swing.JTextField jtxtCedula;
    private javax.swing.JTextField jtxtDireccion;
    private javax.swing.JTextField jtxtMail;
    private javax.swing.JTextField jtxtNacimiento;
    private javax.swing.JTextField jtxtNombre;
    private javax.swing.JTextField jtxtTelefono;
    // End of variables declaration//GEN-END:variables
}
